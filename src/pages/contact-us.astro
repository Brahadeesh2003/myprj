---
import { useState } from 'react';
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
---

<BaseLayout title="Contact Us â€“ GoVal">
  <Navigation />
  <section class="contact-section">
    <h1 class="section-title">Get in Touch with GoVal</h1>
      <p class="section-subtitle">We'd love to hear from you! Whether you have questions about our solutions, need a demo, or want to discuss how GoVal can help streamline your validation processes, our team is here to assist you.</p>
  <!-- Left: Contact Form -->
  
  <div class="contact-form-container">
      <h2>Contact Us</h2>
      <p>Have questions or need a demo? Fill out the form below and our team will get back to you shortly.</p>

      <form id="contactForm" class="contact-form" novalidate action="https://api.web3forms.com/submit" method="POST">
        <input type="hidden" name="access_key" value="1342cce4-8f26-4476-a251-697b21d3daf9" />
        <input type="hidden" name="email_to" value="bdsh200@gmail.com" />
        <input type="hidden" name="redirect" value="https://yourdomain.com/thank-you" />

        <div class="form-group">
          <label for="name">Name *</label>
          <input type="text" id="name" name="name" required />
          <span class="error-message" id="name-error"></span>
        </div>
        <div class="form-group">
          <label for="email">Business Email *</label>
          <input type="email" id="email" name="email" placeholder="yourname@company.com" required pattern="^[^@\s]+@((?!(gmail|yahoo|hotmail|outlook|aol|icloud)\.)[^@\s]+)\.[^@\s]+$" />
          <span class="error-message" id="email-error"></span>
        </div>
        <div class="form-group">
          <label for="phone">Contact Number with Country Code *</label>
          <input type="tel" id="phone" name="phone" placeholder="+1 408 123 4567" required pattern="^\+[\d\s\-\(\)]{7,20}$" />
          <span class="error-message" id="phone-error"></span>
        </div>
        <div class="form-group">
          <label for="country">Country</label>
          <input type="text" id="country" name="country" placeholder="Enter Country" />
        </div>
        <div class="form-group">
          <label for="organization">Organization</label>
          <input type="text" id="organization" name="organization" />
        </div>
        <div class="form-group">
          <label for="message">How Can I Help?</label>
          <textarea id="message" name="message" rows="6"></textarea>
        </div>
        <div class="checkbox-group">
          <input type="checkbox" id="consent" name="consent" required />
          <label for="consent">
            By submitting this form, you agree to the
            <a href="/terms-of-use" target="_blank">Terms of Use</a> and
            <a href="/privacy-policy" target="_blank">Privacy Policy</a>.
            We value your privacy and will not share your information without your consent.
          </label>
          <span class="error-message" id="consent-error"></span>
        </div>
        <button type="submit" class="submit-btn">Submit</button>
        <p id="form-message" aria-live="polite" role="alert" class="form-message"></p>
      </form>
    </div>

    <!-- Right: Contact Info Aligned Left -->
    <div class="contact-info-wrapper">
      
      <img src="/images/contact-illustration.jpg" alt="Contact Us Illustration" style="max-width: 100%; height: auto; margin-bottom: 20px;" />
    
      <div class="contact-info">
      
        <div class="contact-item">
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="#C86428" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3" y="5" width="18" height="14" rx="2" ry="2"></rect>
            <polyline points="3 7 12 13 21 7"></polyline>
          </svg>
          <div class="contact-text">
            <div class="contact-label">Email</div>
            <a href="mailto:info@govalidation.com">info@govalidation.com</a>
          </div>
        </div>
        <div class="contact-item">
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="#F97316" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72c.13 1.21.38 2.39.74 3.5a2 2 0 0 1-.45 2.11L8.09 10.91a16 16 0 0 0 6 6l1.58-1.58a2 2 0 0 1 2.11-.45c1.11.36 2.29.61 3.5.73a2 2 0 0 1 1.71 2z"></path>
          </svg>
          <div class="contact-text">
            <div class="contact-label">Phone</div>
            <div class="phone-numbers">
              <span>+1 (408) 457 0086</span>
              <span>+1 (908) 656 8258</span>
              <span>+91 99000 23710</span>
              <span>+91 90081 50710</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <Footer />

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contactForm');
      const messageEl = document.getElementById('form-message');
      const fields = [
        { el: form.name, errorId: 'name-error', validate: v => v.trim() !== '', message: 'Name is required' },
        { el: form.email, errorId: 'email-error', validate: v => /^[^@\s]+@((?!(gmail|yahoo|hotmail|outlook|aol|icloud)\.)[^@\s]+)\.[^@\s]+$/.test(v), message: 'Please enter a valid business email' },
        { el: form.phone, errorId: 'phone-error', validate: v => /^\+[\d\s\-\(\)]{7,20}$/.test(v), message: 'Please enter a valid phone number with country code' },
        { el: form.consent, errorId: 'consent-error', validate: v => v === true, message: 'You must agree to the terms' },
      ];

      function showError(el, errorId, message) {
        el.classList.add('error');
        const errEl = document.getElementById(errorId);
        if (errEl) {
          errEl.textContent = message;
          errEl.classList.add('show');
        }
      }
      function clearError(el, errorId) {
        el.classList.remove('error');
        const errEl = document.getElementById(errorId);
        if (errEl) {
          errEl.textContent = '';
          errEl.classList.remove('show');
        }
      }
      function validateField(field) {
        if (field.el.type === 'checkbox') {
          if (!field.el.checked) {
            showError(field.el, field.errorId, field.message);
            return false;
          } else {
            clearError(field.el, field.errorId);
            return true;
          }
        }
        const value = field.el.value;
        if (!field.validate(value)) {
          showError(field.el, field.errorId, field.message);
          return false;
        } else {
          clearError(field.el, field.errorId);
          return true;
        }
      }
      function validateForm() {
        let valid = true;
        for (const field of fields) {
          if (!validateField(field)) valid = false;
        }
        return valid;
      }

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        if (!validateForm()) {
          messageEl.textContent = '';
          return;
        }
        try {
          const formData = new FormData(form);
          const response = await fetch(form.action, {
            method: form.method,
            body: formData
          });
          form.reset();
          messageEl.textContent = 'Thanks for your details. We will be in touch with you very soon!';
          messageEl.style.color = 'green';

          const existingBtn = document.getElementById('product-download-btn');
          if (existingBtn) existingBtn.remove();

          const downloadBtn = document.createElement('button');
          downloadBtn.type = 'button';
          downloadBtn.id = 'product-download-btn';
          downloadBtn.textContent = 'Download our Product Presentation';
          downloadBtn.className = 'download-btn';
          downloadBtn.style.marginTop = '10px';
          messageEl.insertAdjacentElement('afterend', downloadBtn);

          downloadBtn.addEventListener('click', () => {
            const link = document.createElement('a');
            link.href = '/files/GoVal-Product-Presentation.pdf';
            link.download = 'GoVal-Product-Presentation.pdf';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
          });
        } catch (error) {
          form.reset();
          messageEl.textContent = 'Thanks for your details. We will be in touch with you very soon!';
          messageEl.style.color = 'green';

          const existingBtn = document.getElementById('product-download-btn');
          if (existingBtn) existingBtn.remove();

          const downloadBtn = document.createElement('button');
          downloadBtn.type = 'button';
          downloadBtn.id = 'product-download-btn';
          downloadBtn.textContent = 'Download our Product Presentation';
          downloadBtn.className = 'download-btn';
          downloadBtn.style.marginTop = '10px';
          messageEl.insertAdjacentElement('afterend', downloadBtn);

          downloadBtn.addEventListener('click', () => {
            const link = document.createElement('a');
            link.href = '/files/GoVal-Product-Presentation.pdf';
            link.download = 'GoVal-Product-Presentation.pdf';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
          });
        }
      });

      fields.forEach(({ el, errorId }) => {
        el.addEventListener('input', () => clearError(el, errorId));
        if (el.type === 'checkbox') {
          el.addEventListener('change', () => clearError(el, errorId));
        }
      });
    });
  </script>

  <style>
    .section-title {
      font-size: 2.5rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 0.5rem;
      color: #000000;
    }
    .contact-section {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      max-width: 1200px;
      margin: 2rem auto;
      gap: 2rem;
      padding: 0 1rem;
      align-items: flex-start;
    }
    .contact-form-container {
      flex: 1;
      min-width: 320px;
      max-width: 600px;
    }
    h1 {
      font-size: 2.5rem;
      margin-bottom: 1rem;
      color: #111827;
    }
    p {
      color: #4b5563;
      line-height: 1.5;
      margin-bottom: 1.25rem;
    }
    form {
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
    }
    .form-group {
      display: flex;
      flex-direction: column;
      margin-bottom: 1rem;
    }
    label {
      font-size: 0.9rem;
      font-weight: 500;
      margin-bottom: 0.4rem;
      color: #374151;
    }
    input, textarea {
      padding: 0.65rem;
      font-size: 1rem;
      border: 2px solid #e5e7eb;
      border-radius: 8px;
      width: 100%;
      box-sizing: border-box;
      transition: border-color 0.3s ease;
      font-family: inherit;
      color: #374151;
    }
    input:focus, textarea:focus {
      outline: none;
      border-color: #6366f1;
      box-shadow: 0 0 0 3px rgba(99,102,241,0.25);
    }
    input.error, textarea.error {
      border-color: #dc2626 !important;
      box-shadow: 0 0 0 3px rgba(220,38,38,0.4) !important;
    }
    .checkbox-group {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-top: 0.5rem;
    }
    .checkbox-group input[type="checkbox"] {
      width: 20px;
      height: 20px;
    }
    .checkbox-group label {
      font-size: 0.85rem;
      color: #4b5563;
    }
    .checkbox-group label a {
      color: #6366f1;
      text-decoration: underline;
    }
    button.submit-btn {
      background: #ff5722;
      color: white;
      font-weight: 700;
      font-size: 1.1rem;
      padding: 12px 28px;
      border: none;
      border-radius: 8px;
      max-width: 240px;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 0.5rem;
    }
    button.submit-btn:hover {
      background: #e64a19;
    }
    #form-message {
      margin-top: 15px;
      font-weight: 600;
    }
    .error-message {
      font-size: 0.75rem;
      color: #dc2626;
      margin-top: 0.25rem;
      display: none;
    }
    .error-message.show {
      display: block;
    }
    /* Contact info */
    .contact-info-wrapper {
      flex: 1;
      min-width: 320px;
      max-width: 600px;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 2rem;
    }
    .contact-info {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }
    .contact-item {
      display: flex;
      gap: 12px;
      align-items: flex-start;
      width: 100%;
      max-width: 300px;
    }
    .contact-item svg {
      flex-shrink: 0;
      width: 28px;
      height: 28px;
      margin-top: 5px;
    }
    .contact-text {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      text-align: left;
    }
    .contact-label {
      font-weight: 700;
      margin-bottom: 5px;
      font-size: 1.1rem;
    }
    .contact-text a {
      font-weight: 500;
      font-size: 1rem;
      color: #256bee;
      text-decoration: none;
    }
    .contact-text a:hover,
    .contact-text a:focus {
      text-decoration: underline;
    }
    .phone-numbers span {
      display: block;
      font-size: 1rem;
      color: #4b5563;
      white-space: nowrap;
      margin-bottom: 5px;
    }
    @media (max-width: 991px) {
      .contact-section {
        flex-direction: column;
      }
      .contact-info-wrapper {
        max-width: 100%;
        margin: 0 auto 30px;
      }
      .contact-info {
        align-items: flex-start;
      }
      .contact-item {
        justify-content: flex-start;
      }
      .contact-text {
        align-items: flex-start;
        text-align: left;
      }
      .phone-numbers span {
        white-space: normal;
      }
    }
    button.download-btn {
      background-color: #ff5722;
      color: white;
      font-weight: 700;
      font-size: 1.1rem;
      padding: 12px 28px;
      border: none;
      border-radius: 8px;
      max-width: 280px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    button.download-btn:hover {
      background-color: #e64a19;
    }
  </style>
</BaseLayout>
